<?php
function open_journal_menu() {
  $items['journal']	= array(
    'title' => 'Open Journal',
    'page callback' => 'open_journal_overview',
    'access arguments' => array('access open journal'),
    'type' => MENU_CALLBACK,
  );

  $items['journal/login'] = array(
    'title' => 'Login',
    'page callback' => 'open_journal_login',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'includes/open_journal_login_form.inc',
  );

  $items['journal/register'] = array(
    'title' => 'Register',
    'page callback' => 'open_journal_register',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'includes/open_journal_register_form.inc',
  );  
  $items['journal/account/setting'] = array(
    'title' => 'Setting my account',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('open_journal_account_setting_form'),
    'access arguments' => array('access open journal'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/open_journal_account_setting_form.inc',
  ); 
  return $items;
}

function open_journal_theme() {

  return array(
    'open_journal_login' => array(
      'variables' => array(
        'form' => NULL,
        'condition' => NULL,
      ),
      'template' => 'templates/open-journal-login', // do not include .tpl.php
        
    ),

    'open_journal_register' => array(
      'variables' => array(
        'form' => NULL,
        'condition' => NULL,
      ),
      'template' => 'templates/open-journal-register', // do not include .tpl.php
        
    ),

  );
}

function open_journal_permission() {
  return array(
    'access open journal' => array(
      'title' => t('Access open journal'),
      'description' => t('Perform user can lonin to join open journal.'),
    ),
  );
}

function open_journal_preprocess_page(&$vars) {

  $mpath = drupal_get_path('module', 'open_journal');

  if($_GET['q'] == 'journal/login' || $_GET['q'] == 'journal/register'){
    // TODO: change to settings upload file
    $vars['open_journal_logo1'] = FALSE;
    $vars['open_journal_logo2'] = theme('image', array(
      'path' => $mpath.'/images/default_logo2.png',
      'alt' => variable_get('site_name', ''),
    ));
    $vars['disabled_title'] = TRUE;
  }
  else {

    $vars['open_journal_logo1'] = theme('image', array(
      'path' => $mpath.'/images/default_logo1.png',
      'alt' => variable_get('site_name', ''),
    ));
    $vars['open_journal_logo2'] = FALSE;
    $vars['disabled_title'] = FALSE;
  }
  
}

function open_journal_overview() {

  return '# Journal list';

}

function open_journal_login() {
  return theme('open_journal_login', array(
    'form' => drupal_render(drupal_get_form('open_journal_login_form')),
    'condition' => 'CONDITION',
  ));
}

function open_journal_register() {
  //return drupal_render(drupal_get_form('open_journal_register_form'));
  return theme('open_journal_register', array(
    'form' => drupal_render(drupal_get_form('open_journal_register_form')),
    'condition' => 'CONDITION',
  ));
}

function open_journal_form_user_profile_form_alter(&$form, &$form_state, $form_id) {
  if (!isset($_GET['destination'])) {
    drupal_goto('journal/account/setting');
  }
}

function open_journal_form_user_admin_settings_alter(&$form, &$form_state) {
  // reorder fieldset weights
  $form['anonymous_settings']['#weight'] = -4;
  $form['admin_role']['#weight'] = -3;
  $form['registration_cancellation']['#weight'] = -2;
  $form['nocurrent_pass_settings'] = array(
    '#type' => 'fieldset',
    '#title' => t('Require Current Password'),
    '#weight' => -1,
  );
  $form['nocurrent_pass_settings']['nocurrent_pass_disabled'] = array(
    '#type' => 'checkbox',
    '#title' => t('Do not require current password'),
    '#description' => t('Check this box to disable the "current password" field on the User Edit form.'),
    '#default_value' => variable_get('nocurrent_pass_disabled', TRUE),
  );
}
