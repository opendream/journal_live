<?php

// Convert to admin settings

define('OPEN_JOURNAL_PREFIX_PATH', 'journal');

define('OPEN_JOURNAL_SUB_LANG_ENABLE', TRUE);
define('OPEN_JOURNAL_SUB_LANG_CODE', 'th');
define('OPEN_JOURNAL_SUB_LANG_TEXT', 'ไทย');
define('OPEN_JOURNAL_SUB_LANG_ABSTRACT_LABEL', 'บทคัดย่อ');
define('OPEN_JOURNAL_SUB_LANG_KEYWORDS_LABEL', 'คำสำคัญ');

define('OPEN_JOURNAL_SUB_LANG_ABSTRACT_REQUIRED', TRUE);
define('OPEN_JOURNAL_SUB_LANG_KEYWORDS_REQUIRED', TRUE);
define('OPEN_JOURNAL_ABSTRACT_REQUIRED', TRUE);
define('OPEN_JOURNAL_KEYWORDS_REQUIRED', TRUE);

define('OPEN_JOURNAL_ABSTRACT_MAX_LENGTH', 10);
define('OPEN_JOURNAL_MAX_MULTI_TEXTFIELD', 10);


// Constant

define('OPEN_JOURNAL_ALLOWED_FILE_TYPE', 'doc docx');

define('OPEN_JOURNAL_STATUS_INFORMATION_APPROVE', 0);

function open_journal_menu() {

  $arg = count(explode('/', OPEN_JOURNAL_PREFIX_PATH));

  $items[OPEN_JOURNAL_PREFIX_PATH]	= array(
    'title' => t('Journal list'),
    'page callback' => 'open_journal_list',
    'access arguments' => array('access open journal'),
    'type' => MENU_CALLBACK,
  );

  $items[OPEN_JOURNAL_PREFIX_PATH.'/login'] = array(
    'title' => t('Login'),
    'page callback' => 'open_journal_login',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'includes/open_journal_login_form.inc',
  );

  $items[OPEN_JOURNAL_PREFIX_PATH.'/register'] = array(
    'title' => t('Register'),
    'page callback' => 'open_journal_register',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'includes/open_journal_register_form.inc',
  );  
  $items[OPEN_JOURNAL_PREFIX_PATH.'/account/setting'] = array(
    'title' => t('Setting my account'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('open_journal_account_setting_form'),
    'access arguments' => array('access open journal'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/open_journal_account_setting_form.inc',
  );

  $items[OPEN_JOURNAL_PREFIX_PATH.'/add'] = array(
    'title' => t('Add new journal'),
    'page callback' => 'open_journal_information',
    'access arguments' => array('access open journal'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/open_journal_information_form.inc',
  );

  $items[OPEN_JOURNAL_PREFIX_PATH.'/%open_journal_journal/edit'] = array(
    'title' => t('Edit journal'),
    'page callback' => 'open_journal_information',
    'page arguments' => array($arg),
    'access arguments' => array('access open journal'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/open_journal_information_form.inc',
  ); 

  $items[OPEN_JOURNAL_PREFIX_PATH.'/%open_journal_journal/overview'] = array(
    'title' => t('Overview'),
    'page callback' => 'open_journal_overview',
    'access arguments' => array('access open journal'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/open_journal_overview.inc',
  ); 

  $items[OPEN_JOURNAL_PREFIX_PATH.'/%open_journal_journal/discussion'] = array(
    'title' => t('Discussions'),
    'page callback' => 'open_journal_discussion_form',
    'access arguments' => array('access open journal'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/open_journal_discussion_form.inc',
  ); 

  $items[OPEN_JOURNAL_PREFIX_PATH.'/%open_journal_journal/file'] = array(
    'title' => t('Files'),
    'page callback' => 'open_journal_file',
    'access arguments' => array('access open journal'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/open_journal_file.inc',
  ); 

  $items[OPEN_JOURNAL_PREFIX_PATH.'/%open_journal_journal/people'] = array(
    'title' => t('Peoples'),
    'page callback' => 'open_journal_people',
    'access arguments' => array('access open journal'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/open_journal_people_form.inc',
  ); 
  return $items;
}

function open_journal_theme() {

  return array(
    'open_journal_login' => array(
      'variables' => array(
        'form' => NULL,
        'condition' => NULL,
      ),
      'template' => 'templates/open-journal-login',
    ),

    'open_journal_register' => array(
      'variables' => array(
        'form' => NULL,
        'condition' => NULL,
      ),
      'template' => 'templates/open-journal-register',
    ),

    'open_journal_detail' => array(
      'variables' => array(
        'jid' => NULL,
        'content' => NULL,
      ),
      'template' => 'templates/open-journal-detail',
    ),

    'open_journal_overview_content' => array(
      'variables' => array(
        'jid' => NULL,
        'abstract' => NULL,
        'latest_file' => NULL,
        'discussion_list' => NULL,
      ),
      'template' => 'templates/open-journal-overview-content',
    ),

    'open_journal_overview_sidebar' => array(
      'variables' => array(
        'jid' => NULL,
        'status'=> NULL,
        'people_list'=> NULL,
        'information'=> NULL,
      ),
      'template' => 'templates/open-journal-overview-sidebar',
    ),

    'open_journal_discussion' => array(
      'variables' => array(
        'jid' => NULL,
        'discussion_list' => NULL,
      ),
      'template' => 'templates/open-journal-discussion',
    ),

    'open_journal_status_form' => array(
      'variables' => array(
        'jid' => NULL,
        'form' => NULL,
      ),
      'template' => 'templates/open-journal-status-form',
    ),

    'open_journal_file' => array(
      'variables' => array(
        'jid' => NULL,
        'file_list' => NULL,
      ),
      'template' => 'templates/open-journal-file',
    ),

    'open_journal_people' => array(
      'variables' => array(
        'jid' => NULL,
        'people_creator_list' => NULL,
        'people_contributor_list' => NULL,
      ),
      'template' => 'templates/open-journal-people',
    ),

    'open_journal_list' => array(
      'variables' => array(
        'journal_list' => NULL,
      ),
      'template' => 'templates/open-journal-list',
    ),

  );
}

function open_journal_permission() {
  return array(
    'access open journal' => array(
      'title' => t('Access open journal'),
      'description' => t('Perform user can lonin to join open journal.'),
    ),
    'update final url field' => array(
      'title' => t('Update final URL field'),
      'description' => t('Perform user can update URL field. Recommented for librarian role.'),
    ),
  );
}

function open_journal_preprocess_html(&$vars) {
  if (user_is_logged_in()) {
    $vars['header_class'] = 'header-logged-in';
    $vars['logged_in'] = TRUE;
  }
  else {
    $vars['header_class'] = 'header-logged-out';
    $vars['logged_in'] = FALSE;
  }
  open_journal_preprocess_page($vars);
}

function open_journal_preprocess_page(&$vars) {

  $mpath = drupal_get_path('module', 'open_journal');

  if(in_array($_GET['q'], array(
      OPEN_JOURNAL_PREFIX_PATH.'/login', 
      OPEN_JOURNAL_PREFIX_PATH.'/register')
    ) || 
    (arg(0) == 'user' && arg(1) == 'reset')
  ) {
    // TODO: change to settings upload file
    $vars['open_journal_logo1'] = FALSE;
    $vars['open_journal_logo2'] = theme('image', array(
      'path' => $mpath.'/images/default_logo2.png',
      'alt' => variable_get('site_name', ''),
    ));
    $vars['disabled_title'] = TRUE;
    $vars['page_class'] = 'page-sign';
  }
  else {

    $vars['open_journal_logo1'] = theme('image', array(
      'path' => $mpath.'/images/default_logo1.png',
      'alt' => variable_get('site_name', ''),
    ));
    $vars['open_journal_logo2'] = FALSE;
    $vars['disabled_title'] = FALSE;
    $vars['page_class'] = 'page-normal';

    if ($_GET['q'] == OPEN_JOURNAL_PREFIX_PATH || $_GET['q'] == OPEN_JOURNAL_PREFIX_PATH.'/list') {
      $vars['page_class'] = 'page-normal page-journal-list';
    }

  }
  
}

function open_journal_login() {
  drupal_add_js(drupal_get_path('module','open_journal').'/js/open_journal_compact.js');
  return theme('open_journal_login', array(
    'form' => drupal_render(drupal_get_form('open_journal_login_form')),
    'condition' => 'CONDITION',
  ));
}

function open_journal_register() {
  drupal_add_js(drupal_get_path('module','open_journal').'/js/open_journal_compact.js');
  return theme('open_journal_register', array(
    'form' => drupal_render(drupal_get_form('open_journal_register_form')),
    'condition' => 'CONDITION',
  ));
}

function open_journal_form_user_profile_form_alter(&$form, &$form_state, $form_id) {
  if (!isset($_GET['destination'])) {
    drupal_goto(OPEN_JOURNAL_PREFIX_PATH.'/account/setting');
  }
}

function open_journal_form_user_admin_settings_alter(&$form, &$form_state) {
  // reorder fieldset weights
  $form['anonymous_settings']['#weight'] = -4;
  $form['admin_role']['#weight'] = -3;
  $form['registration_cancellation']['#weight'] = -2;
  $form['nocurrent_pass_settings'] = array(
    '#type' => 'fieldset',
    '#title' => t('Require Current Password'),
    '#weight' => -1,
  );
  $form['nocurrent_pass_settings']['nocurrent_pass_disabled'] = array(
    '#type' => 'checkbox',
    '#title' => t('Do not require current password'),
    '#description' => t('Check this box to disable the "current password" field on the User Edit form.'),
    '#default_value' => variable_get('nocurrent_pass_disabled', TRUE),
  );
}

function open_journal_journal_load($jid) {

  // Query data from database for edit journal when have journal ID
  $data = db_select('open_journal_journal', 'j')
  ->fields('j')
  ->condition('jid', $jid, '=')
  ->execute()
  ->fetchObject();

  $data->subject_sub = explode(',' ,$data->subject_sub);
  $data->subject_en = explode(',' ,$data->subject_en);
  $data->dc_creator = explode(',' ,$data->dc_creator);
  $data->dc_publisher = explode(',' ,$data->dc_publisher);
  $data->dc_contributor = explode(',' ,$data->dc_contributor);

  return $data;
}

function open_journal_update_field(&$data, $field_name, $field_value=NULL) {

  // Prepare variables
  $old_field_value = isset($data->{$field_name})? $data->{$field_name}: NULL;
  if (!$field_value) {
    $field_value = $old_field_value;
  }

  // Set variables
  if (is_array($field_value)) {
    $data->{$field_name} = implode(',', array_filter($field_value));
  }
  else {
    $data->{$field_name} = $field_value;
  }
}

function open_journal_journal_save($data, $change_status=FALSE) {
  
  if (empty($data->created)) {
    $data->created = REQUEST_TIME;
  }

  $data->changed = REQUEST_TIME;

  if ($change_status || empty($data->status_changed)) {
    $data->status_changed = REQUEST_TIME;
  }

  open_journal_update_field($data, 'subject_en');
  open_journal_update_field($data, 'subject_sub');

  // Dublin core
  open_journal_update_field($data, 'dc_description', $data->description_sub.','.$data->description_en);
  open_journal_update_field($data, 'dc_subject', $data->subject_sub.','.$data->subject_en);
  open_journal_update_field($data, 'dc_creator');
  open_journal_update_field($data, 'dc_publisher');
  open_journal_update_field($data, 'dc_contributor');

  if (is_array($data->date)) {
    $date = (object) $data->date;
    open_journal_update_field($data, 'dc_date', mktime(0, 0, 0, $date->month, $date->day, $date->year));
  }
  else {
    open_journal_update_field($data, 'dc_date');
  }

  if ($data->file) {
    $file = file_load($data->file);
    $data->dc_format = $file->filemime;
  }
  
  // Importantly, save record before save file.
  $pk = (isset($data->jid) && $data->jid)? 'jid': array();

  drupal_write_record('open_journal_journal', $data, $pk);
  
  if ($data->file) {
    $file->status = FILE_STATUS_PERMANENT;
    file_save($file);
  }
  
  // create first discussion.
  if (!$pk) {
    // TODO: code
  }

  return $data;

}

function open_journal_information($jid=NULL) {
  
  return theme('open_journal_detail', array(
    'content' => drupal_render(drupal_get_form('open_journal_information_form',$jid)),
  ));
}

function open_journal_overview() {
  return theme('open_journal_detail', array(
    'content' => theme('open_journal_overview_content'),
    'sidebar' => theme('open_journal_overview_sidebar'),
  ));
}

function open_journal_discussion() {
  return theme('open_journal_detail', array(
    'content' => theme('open_journal_discussion'),
    'sidebar' => theme('open_journal_status_form'),
  ));
}

function open_journal_file() {
  return theme('open_journal_detail', array(
    'content' => theme('open_journal_file'),
  ));
}

function open_journal_people() {
  return theme('open_journal_detail', array(
    'content' => theme('open_journal_people'),
  ));
}

function open_journal_list() {
  drupal_set_title('');
  return theme('open_journal_list', array(
    'journal_list' => array(),
  ));
}
